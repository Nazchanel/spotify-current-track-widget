<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spotify Currently Playing Track</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #121212;
            color: #ffffff;
            display: flex;
            justify-content: flex-start; /* Align items to the start */
            align-items: flex-start; /* Align items to the start */
            height: 100vh; /* Full height of the viewport */
            padding: 20px;
        }
        #track-info {
            background-color: #282828;
            border-radius: 15px; /* Modern rounded corners */
            padding: 20px;
            max-width: 400px; /* Define max width */
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
            display: flex;
            flex-direction: column; /* Align items vertically */
            align-items: center; /* Center items horizontally */
        }
        img {
            border-radius: 10px; /* Match border radius with other elements */
            margin-top: 20px; /* Space above image */
            width: 100%; /* Make image responsive */
            max-width: 400px; /* Maximum width */
            height: auto; /* Maintain aspect ratio */
        }
    </style>
</head>
<body>
    <div id="track-info">
        <h1>Spotify Currently Playing Track</h1>
        <canvas id="trackCanvas" width="400" height="200" style="display:none;"></canvas>
        <img id="trackImage" alt="Currently Playing Track" />
    </div>

    <script>
        const accessToken = '<%= accessToken %>';  // This will be set in the server
        const trackInfo = document.getElementById('trackCanvas');
        const context = trackInfo.getContext('2d');
        const trackImage = document.getElementById('trackImage');

        async function getCurrentlyPlayingTrack() {
            const response = await fetch('https://api.spotify.com/v1/me/player/currently-playing', {
                headers: {
                    'Authorization': `Bearer ${accessToken}`
                }
            });

            if (response.ok) {
                const data = await response.json();
                if (data && data.item) {
                    drawTrackInfo(data.item);
                }
            } else {
                console.log('Failed to fetch track info.');
            }
        }

        function drawTrackInfo(track) {
            // Clear the canvas
            context.clearRect(0, 0, trackInfo.width, trackInfo.height);

            // Set background color
            context.fillStyle = '#282828';
            context.fillRect(0, 0, trackInfo.width, trackInfo.height);

            // Set text styles
            context.fillStyle = '#ffffff';
            context.font = '20px Arial';

            // Draw track info
            context.fillText(`Track: ${track.name}`, 20, 40);
            context.fillText(`Artist: ${track.artists[0].name}`, 20, 80);
            context.fillText(`Album: ${track.album.name}`, 20, 120);

            // Convert canvas to data URL
            const imageURL = trackInfo.toDataURL("image/png");
            trackImage.src = imageURL; // Set the image source to the canvas data
        }

        setInterval(getCurrentlyPlayingTrack, 2000); // Poll every 2 seconds
        window.onload = getCurrentlyPlayingTrack; // Initial call on page load
    </script>
</body>
</html>
