name: Update Live Track Info Image

on:
  workflow_dispatch:  # Manual trigger
  schedule:           # Scheduled trigger
    - cron: '*/5 * * * *'  # Runs every 5 minutes

jobs:
  update-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Puppeteer
        run: |
          npm install puppeteer

      - name: Generate SVG Image
        run: |
          node generate-image.js

      - name: Rename image
        run: |
          mv songs-pictures/image.png songs-pictures/image${{ github.run_number }}.png

      - name: Update README.md
        run: |
          # Calculate last run number
          current_run_number=${{ github.run_number }}
          last_run_number=$((current_run_number - 1))
          
          sed -i "s|!\[\](songs-pictures/image${last_run_number}.png)|!\[\](songs-pictures/image${current_run_number}.png)|g" README.md
          
          echo "Before:"
          ls songs-pictures
          
          if [[ -f "songs-pictures/image${last_run_number}.png" ]]; then
            rm songs-pictures/image${last_run_number}.png
            echo "Removed: songs-pictures/image${last_run_number}.png"
          else
            echo "No file to remove: songs-pictures/image${last_run_number}.png does not exist."
          fi



          echo "After:"
          ls songs-pictures
        
          echo "README.md updated text:"
          cat README.md      
      - name: Commit and push changes
        env:
          GITHUB_TOKEN_ALT: ${{ secrets.ALT_GITHUB_PAT }}
        run: |
          current_run_number=${{ github.run_number }}
          last_run_number=$((current_run_number - 1))

          echo "Last Run Number: ${last_run_number}"

          # Set the alternate account's email and name
          git config --local user.email "alt.email@domain.com"
          git config --local user.name "Alt Username"

          # Check if the last image exists and remove it
          if git ls-files --error-unmatch songs-pictures/image${last_run_number}.png > /dev/null 2>&1; then
              git rm songs-pictures/image${last_run_number}.png
              echo "Removed songs-pictures/image${last_run_number}.png from git"
          else  
            echo "File songs-pictures/image${last_run_number}.png not found in git, skipping removal"
          fi       
                            
          git add songs-pictures/image${current_run_number}.png README.md

          git commit -m "Remove image${last_run_number}.png and update track info image to image${current_run_number}" || echo "No changes to commit"

          # Push using the personal access token for the alternate account
          git push https://alt-username:${GITHUB_TOKEN_ALT}@github.com/alt-username/repo-name.git

